
{
  "rules": {
    "users": {
      ".indexOn": ["role", "assignedCompanyId"],
      "$userId": {
        ".read": "auth != null && (auth.uid === $userId || root.child('users').child(auth.uid).child('role').val() === 'admin')",
        ".write": "auth != null && (auth.uid === $userId || root.child('users').child(auth.uid).child('role').val() === 'admin')",
        "residues": {
          ".read": "auth.uid === $userId",
          ".write": "auth.uid === $userId"
        }
      }
    },
    "companies": {
      ".read": "auth.uid != null",
      ".write": "auth.uid != null && root.child('users').child(auth.uid).child('role').val() === 'admin'",
      ".indexOn": ["assignedUserUid"]
    },
    "materials": {
      ".read": "auth.uid != null",
      ".write": "auth.uid != null && root.child('users').child(auth.uid).child('role').val() === 'admin'"
    },
    "factors": {
      ".read": "auth.uid != null",
      ".write": "auth.uid != null && root.child('users').child(auth.uid).child('role').val() === 'admin'"
    },
    "wasteLog": {
      ".indexOn": ["companyId"],
      "$logId": {
        ".read": "auth.uid != null && (root.child('users').child(auth.uid).child('assignedCompanyId').val() === data.child('companyId').val() || root.child('users').child(auth.uid).child('role').val() === 'admin')",
        ".write": "auth.uid != null && (root.child('users').child(auth.uid).child('assignedCompanyId').val() === newData.child('companyId').val() || root.child('users').child(auth.uid).child('role').val() === 'admin')"
      }
    },
    "disposalEvents": {
      ".indexOn": ["companyId"],
      "$eventId": {
        ".read": "auth.uid != null && (root.child('users').child(auth.uid).child('assignedCompanyId').val() === data.child('companyId').val() || root.child('users').child(auth.uid).child('role').val() === 'admin')",
        ".write": "auth.uid != null && (root.child('users').child(auth.uid).child('assignedCompanyId').val() === newData.child('companyId').val() || root.child('users').child(auth.uid).child('role').val() === 'admin')"
      }
    },
    "disposalCertificates": {
      ".indexOn": ["companyId"],
      "$certId": {
        ".read": "auth.uid != null && (root.child('users').child(auth.uid).child('assignedCompanyId').val() === data.child('companyId').val() || root.child('users').child(auth.uid).child('role').val() === 'admin')",
        ".write": "auth.uid != null && root.child('users').child(auth.uid).child('role').val() === 'admin'"
      }
    }
  }
}
